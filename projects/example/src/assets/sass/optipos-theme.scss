@use '@angular/material' as mat;
@import '@angular/material/theming';

@include mat.core();
// optipos palette
$mat-optipos-palette: (50: #e7f6fc, 100: #c4e9f9, 200: #9cdbf5, 300: #74cdf0, 400: #57c2ed, 500: #1d99de, 600: #33b0e7, 700: #2ca7e4, 800: #249fe1, 900: #1790db, A100: #ffffff, A200: #daf0ff, A400: #a7dbff, A700: #8dd0ff, contrast: (50: #000000, 100: #000000, 200: #000000, 300: #000000, 400: #000000, 500: #ffffff, 600: #ffffff, 700: #ffffff, 800: #ffffff, 900: #ffffff, A100: #000000, A200: #000000, A400: #000000, A700: #ffffff, ));
$optipos-primary: mat.define-palette($mat-optipos-palette);
$optipos-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
// The warn palette is optional (defaults to red).
$optipos-warn: mat.define-palette(mat.$red-palette);
// Create the theme object (a Sass map containing all of the palettes).
$optipos-theme: mat.define-light-theme($optipos-primary, $optipos-accent, $optipos-warn);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($optipos-theme);
// @function my-mat-light-theme-foreground($color) {
//     @return (
//         base:              $color,
//         divider:           $black-12-opacity,
//         dividers:          $black-12-opacity,
//         disabled:          rgba($color, 0.38),
//         disabled-button:   rgba($color, 0.38),
//         disabled-text:     rgba($color, 0.38),
//         hint-text:         rgba($color, 0.38),
//         secondary-text:    rgba($color, 0.54),
//         icon:              rgba($color, 0.54),
//         icons:             rgba($color, 0.54),
//         text:              rgba($color, 0.87),
//         slider-off:        rgba($color, 0.26),
//         slider-off-active: rgba($color, 0.38),
//     );
// };
// // You can put any color here. I've chosen mat-color($my-app-primary, 700)
// $my-foreground: my-mat-light-theme-foreground(mat-color(blue, 700));
// $my-app-theme-custom: map-merge($optipos-theme, (foreground: $my-foreground));
// // Include your custom theme.
// @include angular-material-theme($my-app-theme-custom);
// Other colors
$optipos-white: #fafafa;
$optipos-green: #8cc63f;
$optipos-grey: #e2e2e2;
$optipos-tab-bg: #e7e5e3;
$optipos-disabled-font: rgba(0, 0, 0, .4);
$optipos-blue: mat.get-color-from-palette($optipos-primary);
$optipos-red: mat.get-color-from-palette($optipos-warn);

// html elements size
@mixin button {
  width: 88px;
  height: 36px;
  color: $optipos-blue;
}

@mixin toolbar-secondary {
  border-radius: 5px 5px 0 0;
  margin-top: 16px;
  height: 45px;
}

// mixin used only in edit survey component
@mixin card {
  width: 247px;
  height: 99px;
  background-color: $optipos-white;
  margin-right: 35px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  &:last-child {
    margin-right: 0;
  }

  & .title p {
    font-size: large;
    color: $optipos-disabled-font;
    margin-top: 0;
  }

  .content {
    display: flex;
    justify-content: space-around;
    width: 100%;

    button {
      @include button;
    }

    p.underline {
      border-width: 0 0 1px;
      border-style: solid;
      height: 23px;
      border-color: $optipos-blue;
    }
  }
}

@mixin expansion-panel {
  box-shadow: none;
  margin: 5px 0;
  background-color: white; //$optipos-tab-bg;
}

.standard-row {
  display: flex;
  align-items: center;
  height: 130px;
}

.mat-tab-body-content {
  overflow-y: hidden !important;
}

button {
  text-transform: uppercase;
}

.mat-sort-header-button {
  text-transform: initial !important;
}

.mat-mini-fab {
  width: 24px;
  height: 24px;

  .mat-button-wrapper {
    padding: 0 !important;
    display: block !important; // TODO figure out how to position the wrapper correctly

    i {
      vertical-align: -1px;
    }
  }
}

.mat-fab {
  width: 40px;
  height: 40px;

  .mat-button-wrapper {
    padding: 8px !important;
    display: block !important; // TODO figure out how to position the wrapper correctly
    // i {
    //   vertical-align: -1px;
    // }
  }
}

